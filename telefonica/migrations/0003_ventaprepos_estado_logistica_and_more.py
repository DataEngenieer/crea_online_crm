# Generated by Django 4.2.7 on 2023-11-15 20:59

from django.db import migrations, models
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('telefonica', '0002_ventaprepos_estado_logistica_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            """
            DO $$
            BEGIN
                -- Crear tablas si no existen
                IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'telefonica_ventaportabilidad') THEN
                    CREATE TABLE telefonica_ventaportabilidad (
                        id bigint NOT NULL PRIMARY KEY,
                        numero varchar(100) NOT NULL,
                        tipo_cliente varchar(20) NOT NULL,
                        tipo_documento varchar(10) NOT NULL,
                        documento varchar(15) NOT NULL,
                        fecha_expedicion date NOT NULL,
                        nombres varchar(100) NOT NULL,
                        apellidos varchar(100) NOT NULL,
                        telefono_legalizacion varchar(10) NOT NULL,
                        numero_a_portar varchar(10) NOT NULL,
                        nip integer NOT NULL,
                        fecha_entrega date NOT NULL,
                        fecha_ventana_cambio date NOT NULL,
                        numero_orden integer NOT NULL,
                        base_origen varchar(100) NOT NULL,
                        usuario_greta varchar(100) NOT NULL,
                        observacion text NULL,
                        estado_venta varchar(30) NOT NULL DEFAULT 'pendiente_revision',
                        estado_logistica varchar(21) NOT NULL DEFAULT 'pendiente_seguimiento',
                        fecha_creacion timestamp with time zone NOT NULL,
                        fecha_actualizacion timestamp with time zone NOT NULL,
                        agente_id integer NULL,
                        backoffice_id integer NULL,
                        plan_adquiere_id bigint NOT NULL,
                        confronta varchar(100) NULL,
                        CONSTRAINT telefonica_ventaportabilidad_agente_id_fkey FOREIGN KEY (agente_id) REFERENCES auth_user(id) ON DELETE SET NULL,
                        CONSTRAINT telefonica_ventaportabilidad_backoffice_id_fkey FOREIGN KEY (backoffice_id) REFERENCES auth_user(id) ON DELETE SET NULL,
                        CONSTRAINT telefonica_ventaportabilidad_plan_adquiere_id_fkey FOREIGN KEY (plan_adquiere_id) REFERENCES telefonica_planes_portabilidad(id) ON DELETE RESTRICT
                    );
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'telefonica_ventaprepos') THEN
                    CREATE TABLE telefonica_ventaprepos (
                        id bigint NOT NULL PRIMARY KEY,
                        numero varchar(100) NOT NULL,
                        tipo_cliente varchar(20) NOT NULL,
                        tipo_documento varchar(10) NOT NULL,
                        documento varchar(15) NOT NULL,
                        fecha_expedicion date NOT NULL,
                        nombres varchar(100) NOT NULL,
                        apellidos varchar(100) NOT NULL,
                        telefono_legalizacion varchar(10) NOT NULL,
                        numero_orden integer NOT NULL,
                        base_origen varchar(100) NOT NULL,
                        usuario_greta varchar(100) NOT NULL,
                        observacion text NULL,
                        estado_venta varchar(30) NOT NULL DEFAULT 'pendiente_revision',
                        estado_logistica varchar(21) NOT NULL DEFAULT 'pendiente_seguimiento',
                        fecha_creacion timestamp with time zone NOT NULL,
                        fecha_actualizacion timestamp with time zone NOT NULL,
                        agente_id integer NULL,
                        plan_adquiere_id bigint NOT NULL,
                        CONSTRAINT telefonica_ventaprepos_agente_id_fkey FOREIGN KEY (agente_id) REFERENCES auth_user(id) ON DELETE SET NULL,
                        CONSTRAINT telefonica_ventaprepos_plan_adquiere_id_fkey FOREIGN KEY (plan_adquiere_id) REFERENCES telefonica_planes_portabilidad(id) ON DELETE RESTRICT
                    );
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'telefonica_ventaupgrade') THEN
                    CREATE TABLE telefonica_ventaupgrade (
                        id bigint NOT NULL PRIMARY KEY,
                        numero varchar(100) NOT NULL,
                        tipo_cliente varchar(20) NOT NULL,
                        tipo_documento varchar(10) NOT NULL,
                        documento varchar(15) NOT NULL,
                        fecha_expedicion date NOT NULL,
                        nombres varchar(100) NOT NULL,
                        apellidos varchar(100) NOT NULL,
                        telefono_legalizacion varchar(10) NOT NULL,
                        codigo_verificacion varchar(6) NOT NULL,
                        numero_orden integer NOT NULL,
                        base_origen varchar(100) NOT NULL,
                        usuario_greta varchar(100) NOT NULL,
                        observacion text NULL,
                        estado_venta varchar(30) NOT NULL DEFAULT 'pendiente_revision',
                        estado_logistica varchar(21) NOT NULL DEFAULT 'pendiente_seguimiento',
                        fecha_creacion timestamp with time zone NOT NULL,
                        fecha_actualizacion timestamp with time zone NOT NULL,
                        agente_id integer NULL,
                        plan_adquiere_id bigint NOT NULL,
                        CONSTRAINT telefonica_ventaupgrade_agente_id_fkey FOREIGN KEY (agente_id) REFERENCES auth_user(id) ON DELETE SET NULL,
                        CONSTRAINT telefonica_ventaupgrade_plan_adquiere_id_fkey FOREIGN KEY (plan_adquiere_id) REFERENCES telefonica_planes_portabilidad(id) ON DELETE RESTRICT
                    );
                END IF;
                
                -- AÃ±adir columnas si no existen
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaprepos' AND column_name = 'estado_logistica') THEN
                    ALTER TABLE telefonica_ventaprepos ADD COLUMN estado_logistica varchar(21) NOT NULL DEFAULT 'pendiente_seguimiento';
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaprepos' AND column_name = 'estado_venta') THEN
                    ALTER TABLE telefonica_ventaprepos ADD COLUMN estado_venta varchar(30) NOT NULL DEFAULT 'pendiente_revision';
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaupgrade' AND column_name = 'estado_logistica') THEN
                    ALTER TABLE telefonica_ventaupgrade ADD COLUMN estado_logistica varchar(21) NOT NULL DEFAULT 'pendiente_seguimiento';
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaupgrade' AND column_name = 'estado_venta') THEN
                    ALTER TABLE telefonica_ventaupgrade ADD COLUMN estado_venta varchar(30) NOT NULL DEFAULT 'pendiente_revision';
                END IF;
                
                -- Actualizar campos existentes
                IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_agendamiento' AND column_name = 'estado_agendamiento') THEN
                    ALTER TABLE telefonica_agendamiento ALTER COLUMN estado_agendamiento TYPE varchar(20);
                END IF;
                
                IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaportabilidad' AND column_name = 'estado_logistica') THEN
                    ALTER TABLE telefonica_ventaportabilidad ALTER COLUMN estado_logistica TYPE varchar(21);
                END IF;
                
                IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaportabilidad' AND column_name = 'estado_venta') THEN
                    ALTER TABLE telefonica_ventaportabilidad ALTER COLUMN estado_venta TYPE varchar(30);
                END IF;
                
                IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaportabilidad' AND column_name = 'numero') THEN
                    ALTER TABLE telefonica_ventaportabilidad ALTER COLUMN numero TYPE varchar(100);
                END IF;
                
                IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaprepos' AND column_name = 'numero') THEN
                    ALTER TABLE telefonica_ventaprepos ALTER COLUMN numero TYPE varchar(100);
                END IF;
                
                IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'telefonica_ventaupgrade' AND column_name = 'numero') THEN
                    ALTER TABLE telefonica_ventaupgrade ALTER COLUMN numero TYPE varchar(100);
                END IF;
            END
            $$;
            """,
            """
            -- No reverse SQL needed
            """
        ),
    ]
